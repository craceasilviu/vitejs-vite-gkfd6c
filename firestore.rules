rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function hasRole(role) {
      return isAuthenticated() && getUserData().role == role;
    }
    
    function isAdmin() {
      return hasRole('admin');
    }
    
    function isProducer() {
      return hasRole('producer');
    }
    
    function isSupermarket() {
      return hasRole('supermarket');
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow delete: if isAdmin();
    }

    // Products collection
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Authorizations collection
    match /authorizations/{authId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Offers collection
    match /offers/{offerId} {
      allow read: if true;
      allow create: if isAuthenticated() && isProducer();
      allow update: if isAuthenticated() && (
        isAdmin() || 
        (isProducer() && resource.data.producerId == request.auth.uid)
      );
      allow delete: if isAuthenticated() && (
        isAdmin() || 
        (isProducer() && resource.data.producerId == request.auth.uid)
      );
    }

    // News collection
    match /news/{newsId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Alerts collection
    match /alerts/{alertId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}